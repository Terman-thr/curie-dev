<?xml version="1.0" ?>
<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="     http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd     http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd     http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd     http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
  <munit:config name="test_suite_prc_curie_employee_sync_flow_1734660.xml"/>
  <munit:test name="test_suite_prc_curie_employee_sync_flow_1" description="Test the prc-curie-employee-syncFlow with an empty response from Workday API to ensure proper handling of no data scenarios." doc:id="1234abcd-1234-1234-1234-123456789abc">
    <munit:behavior>
      <!-- Set up mock response for Workday API call -->
      <munit-tools:mock-when doc:name="Mock Get Workers" processor="workday:staffing">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="get workers" attributeName="doc:name"/>
        </munit-tools:with-attributes>
        <munit-tools:then-return>
          <munit-tools:payload value="#[MunitTools::getResourceAsString('test_suite_prc_curie_employee_sync_flow_1734660/mock_data_scenario_1/mock-empty-workday-response.xml')]" mediaType="application/xml" encoding="UTF-8"/>
        </munit-tools:then-return>
      </munit-tools:mock-when>
      <!-- Mock the sub-flow to prevent actual execution -->
      <munit-tools:mock-when doc:name="Mock Sub-Flow" processor="flow-ref">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="prc-curie-employee-syncSub_Flow" attributeName="name"/>
        </munit-tools:with-attributes>
        <munit-tools:then-return>
          <munit-tools:payload value="#[[]]" mediaType="application/java"/>
        </munit-tools:then-return>
      </munit-tools:mock-when>
      <!-- Configure scheduler to trigger immediately -->
      <munit:set-event doc:name="Set Event">
        <munit:payload value="#[{}]"/>
      </munit:set-event>
    </munit:behavior>
    <munit:execution>
      <flow-ref doc:name="Flow Reference" name="prc-curie-employee-syncFlow"/>
    </munit:execution>
    <munit:validation>
      <!-- Verify start logger message -->
      <munit-tools:verify-call doc:name="Verify Start Logger" processor="logger">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="Start" attributeName="doc:name"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <!-- Verify Workday API call -->
      <munit-tools:verify-call doc:name="Verify Workday API Call" processor="workday:staffing">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="get workers" attributeName="doc:name"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <!-- Verify data transformation -->
      <munit-tools:verify-call doc:name="Verify Data Transform" processor="ee:transform">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="response workers" attributeName="doc:name"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <!-- Verify sub-flow call -->
      <munit-tools:verify-call doc:name="Verify Sub-Flow Call" processor="flow-ref">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="prc-curie-employee-syncSub_Flow" attributeName="name"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <!-- Verify end logger message -->
      <munit-tools:verify-call doc:name="Verify End Logger" processor="logger">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="End" attributeName="doc:name"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <!-- Assert no errors -->
      <munit-tools:assert-that doc:name="Assert No Errors" expression="#[error]" is="#[MunitTools::nullValue()]"/>
    </munit:validation>
  </munit:test>
  <munit:test name="test_suite_prc_curie_employee_sync_flow_0" description="Test the complete flow of prc-curie-employee-syncFlow, including the scheduler trigger, Workday API call, data transformation, and Salesforce upsert operation.">
    <munit:behavior>
      <munit-tools:mock-when processor="workday:staffing">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="get workers" attributeName="doc:name"/>
        </munit-tools:with-attributes>
        <munit-tools:then-return>
          <munit-tools:payload value="#[MunitTools::getResourceAsString('test_suite_prc_curie_employee_sync_flow_1734660/mock_data_scenario_0/workday_response.xml')]" mediaType="application/xml" encoding="UTF-8"/>
        </munit-tools:then-return>
      </munit-tools:mock-when>
      <munit-tools:mock-when processor="salesforce:upsert">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="Upsert" attributeName="doc:name"/>
        </munit-tools:with-attributes>
        <munit-tools:then-return>
          <munit-tools:payload value="#[MunitTools::getResourceAsString('test_suite_prc_curie_employee_sync_flow_1734660/mock_data_scenario_0/salesforce_response.json')]" mediaType="application/json" encoding="UTF-8"/>
        </munit-tools:then-return>
      </munit-tools:mock-when>
      <munit-tools:mock-when processor="flow-ref">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="prc-curie-employee-syncSub_Flow" attributeName="name"/>
        </munit-tools:with-attributes>
        <munit-tools:then-return>
          <munit-tools:payload value="#[{}]"/>
        </munit-tools:then-return>
      </munit-tools:mock-when>
    </munit:behavior>
    <munit:execution>
      <try>
        <flow-ref name="prc-curie-employee-syncFlow"/>
        <error-handler>
          <on-error-continue type="MULE:EXPRESSION">
            <set-variable variableName="errorOccurred" value="true"/>
          </on-error-continue>
        </error-handler>
      </try>
    </munit:execution>
    <munit:validation>
      <munit-tools:assert-that expression="#[vars.errorOccurred]" is="#[MunitTools::nullValue()]" message="Unexpected error occurred"/>
      <munit-tools:verify-call processor="logger">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="Start" attributeName="doc:name"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <munit-tools:verify-call processor="workday:staffing">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="get workers" attributeName="doc:name"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <munit-tools:verify-call processor="ee:transform">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="response workers" attributeName="doc:name"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <munit-tools:verify-call processor="flow-ref">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="prc-curie-employee-syncSub_Flow" attributeName="name"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <munit-tools:verify-call processor="logger">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="End" attributeName="doc:name"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
    </munit:validation>
  </munit:test>
</mule>